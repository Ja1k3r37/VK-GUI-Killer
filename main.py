# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'final-design.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from loguru import logger


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("VkDeleter")
        MainWindow.resize(504, 249)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(250, 50, 71, 51))
        self.label.setStyleSheet("font-size: 25px;")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(230, 90, 91, 51))
        self.label_2.setStyleSheet("font-size: 25px;")
        self.label_2.setObjectName("label_2")
        self.login_line = QtWidgets.QLineEdit(self.centralwidget)
        self.login_line.setGeometry(QtCore.QRect(330, 70, 161, 21))
        self.login_line.setObjectName("login_line")
        self.password_line = QtWidgets.QLineEdit(self.centralwidget)
        self.password_line.setGeometry(QtCore.QRect(330, 110, 161, 21))
        self.password_line.setObjectName("password_line")
        self.delete_messages_button = QtWidgets.QPushButton(self.centralwidget)
        self.delete_messages_button.setGeometry(QtCore.QRect(30, 80, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.delete_messages_button.setFont(font)
        self.delete_messages_button.setStyleSheet("background-color: #6b7f75;\n"
"font-size: 13px;\n"
"\n"
"\n"
"")
        self.delete_messages_button.setObjectName("delete_messages_button")
        self.deleteaccount_button = QtWidgets.QPushButton(self.centralwidget)
        self.deleteaccount_button.setGeometry(QtCore.QRect(10, 30, 161, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.deleteaccount_button.setFont(font)
        self.deleteaccount_button.setStyleSheet("background-color: #ff0e46;\n"
"font-size: 13px;\n"
"color: #1322ff;\n"
"\n"
"\n"
"")
        self.deleteaccount_button.setObjectName("deleteaccount_button")
        self.delete_friend_button = QtWidgets.QPushButton(self.centralwidget)
        self.delete_friend_button.setGeometry(QtCore.QRect(170, 170, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.delete_friend_button.setFont(font)
        self.delete_friend_button.setStyleSheet("background-color: #d4ff83;\n"
"font-size: 13px;\n"
"\n"
"\n"
"")
        self.delete_friend_button.setObjectName("delete_friend_button")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(250, 10, 81, 51))
        self.label_4.setStyleSheet("font-size: 25px;")
        self.label_4.setObjectName("label_4")
        self.token_line = QtWidgets.QLineEdit(self.centralwidget)
        self.token_line.setGeometry(QtCore.QRect(330, 30, 161, 21))
        self.token_line.setText("")
        self.token_line.setObjectName("token_line")
        self.delete_friend_button_2 = QtWidgets.QPushButton(self.centralwidget)
        self.delete_friend_button_2.setGeometry(QtCore.QRect(30, 170, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.delete_friend_button_2.setFont(font)
        self.delete_friend_button_2.setStyleSheet("background-color: #55ffff;\n"
"font-size: 13px;\n"
"\n"
"\n"
"")
        self.delete_friend_button_2.setObjectName("delete_friend_button_2")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 504, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Login"))
        self.label_2.setText(_translate("MainWindow", "Пароль"))
        self.delete_messages_button.setText(_translate("MainWindow", "DELETE MESSAGES"))
        self.deleteaccount_button.setText(_translate("MainWindow", "СОВА НИКОГДА НЕ СПИТ"))
        self.delete_friend_button.setText(_translate("MainWindow", "DELETE FRIENDS"))
        self.label_4.setText(_translate("MainWindow", "Token"))
        self.delete_friend_button_2.setText(_translate("MainWindow", "DELETE POSTS"))

        self.delete_messages_button.clicked.connect(self.delete_vk_conversations)
        self.delete_friend_button_2.clicked.connect(self.delete_posts)
        self.deleteaccount_button.clicked.connect(self.delete_account)
        self.delete_friend_button.clicked.connect(self.friends_delete)



# функция по удалению переписок
    def testes(self, token_line):
            print(self.token_line.text())
            print(self.login_line.text())
            print(self.password_line.text())

    def delete_vk_conversations(self, ):  # указываем токен и кол-во диалогов
        try:
            print(self.login_line.text(), self.password_line.text())
            vk_session = vk_api.VkApi(self.login_line.text(), self.password_line.text())
            vk_session.auth()
            api = vk_api.VkApi(token=self.token_line.text()).get_api()
            friends = int(input('Сколько диалогов удаляем: '))
            print(self.token_line.text())
            # Cоздание объекта VK API
            vk_session = vk_api.VkApi(token=self.token_line.text())
            vk = vk_session.get_api()


            try:
                # Получение диалогов
                conversations = vk.messages.getConversations(count=friends)

                # Удаление диалогов
                for conversation in conversations['items']:
                    conversation_id = conversation['conversation']['peer']['id']
                    response = vk.messages.deleteConversation(peer_id=conversation_id)
                    logger.info(f"Удаление диалога с ID: {conversation_id}")
            except vk_api.exceptions.ApiError as error:
                logger.error(f"Ошибка при удалении диалога: {error}")
        except:
            print(f'''да у нас с тобой бля данные это
                    {self.login_line.text()}
                    {self.password_line.text()}
                    {self.token_line.text()}''')


    # delete_vk_conversations(token, count=1)

    def delete_posts(self):
        vk_session = vk_api.VkApi(self.login_line.text(), self.password_line.text())
        api = vk_api.VkApi(token=self.token_line.text()).get_api()
        vk_session.auth()
        vk = vk_session.get_api()
        num_of_posts = vk.wall.get()["items"][0]["id"]
        api = vk_api.VkApi(token=self.token_line.text()).get_api()
        for i in range(num_of_posts + 1):
            try:
                vk.wall.delete(post_id=i)
                print(f"Удалено сообщение под номером: {i}")
            except:
                print('у пользователя нет постов')


    def delete_account(self): #функция удаления аккаунта
        try:
            vk_session = vk_api.VkApi(self.login_line.text(), self.password_line.text())
            vk_session.auth()
            vk = vk_session.get_api()
            for h in range(6):
                print(vk.wall.post(message='Сова никогда не спит'))
        except Exception as e: print(e)


    def friends_delete(self):
        try:
            vk_session = vk_api.VkApi(self.login_line.text(), self.password_line.text())
            vk_session.auth()
            api = vk_api.VkApi(token=self.token_line.text()).get_api()
            for friend in api.friends.getMutual(target_uids=','.join([str(uid) for uid in api.friends.get()['items']])):
                    
                friend_name = api.users.get(user_ids=friend['id'])[0]

                api.friends.delete(user_id=friend['id'])

                print('Удалил друга ' + friend_name['first_name'] + ' ' + friend_name['last_name'])

        except Exception as e: print(e)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())